import React, { useEffect, useState } from 'react';
import { useSearchParams } from 'react-router-dom';
import axios from 'axios';
import { api } from '../../Config/Api';

const PaymentResult = () => {
    const [searchParams] = useSearchParams();
    const [status, setStatus] = useState('loading');
    const [message, setMessage] = useState('');

    const jwt = localStorage.getItem('jwt'); // L·∫•y JWT t·ª´ localStorage

    useEffect(() => {
        const fetchPaymentStatus = async () => {
            try {
                if (!jwt) {
                    setStatus('failed');
                    setMessage('JWT kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ h·∫øt h·∫°n');
                    return;
                }

                // Chuy·ªÉn query params th√†nh object
                const queryParams = Object.fromEntries(searchParams.entries());
                console.log('Params t·ª´ URL:', queryParams);

                // G·ªçi API Backend ƒë·ªÉ c·∫≠p nh·∫≠t giao d·ªãch
                const response = await api.get('/api/payment/success', {
                    params: queryParams,
                    headers: {
                        Authorization: `Bearer ${jwt}`,
                    },
                });

                console.log('Ph·∫£n h·ªìi t·ª´ Backend:', response.data);

                if (response.status === 200) {
                    setStatus('success');
                    setMessage(response.data);
                } else {
                    setStatus('failed');
                    setMessage('Giao d·ªãch kh√¥ng th√†nh c√¥ng, vui l√≤ng th·ª≠ l·∫°i!');
                }
            } catch (error) {
                console.error('L·ªói:', error.response?.data || error.message);
                setStatus('failed');
                setMessage(error.response?.data || 'L·ªói khi x·ª≠ l√Ω thanh to√°n VNPAY');
            }
        };

        fetchPaymentStatus();
    }, [searchParams, jwt]);

    return (
        <div style={{ textAlign: 'center', marginTop: '50px' }}>
            {status === 'loading' && <h2>üîÑ ƒêang x·ª≠ l√Ω thanh to√°n...</h2>}
            {status === 'success' && (
                <div>
                    <h2>‚úÖ Thanh to√°n th√†nh c√¥ng!</h2>
                    <p>{message}</p>
                    <a href="/">Quay v·ªÅ trang ch·ªß</a>
                </div>
            )}
            {status === 'failed' && (
                <div>
                    <h2>‚ùå Thanh to√°n th·∫•t b·∫°i!</h2>
                    <p>{message}</p>
                    <a href="/">Th·ª≠ l·∫°i</a>
                </div>
            )}
        </div>
    );
};

export default PaymentResult;
